type Query {
    dialogs: [Dialog!]!
    users: [User!]!
}

type Mutation {
    createDialog(name: String!, lines: [LineInput!]!): Dialog!
    signup(email: String!, password: String!, name: String!): AuthPayload
    login(email: String!, password: String!): AuthPayload
}

type Dialog {
    id: ID!
    name: String!
    roles: [Role!]!
    lines: [Line!]!
    user: User!
}

type Role {
    id: ID!
    name: String!
}

input RoleInput {
    name: String!
}

type Line {
    id: ID!
    text: String!
    guess: String!
    role: Role!
    number: Int!
}

input LineInput {
    text: String!
    guess: String!
    role: RoleInput!
    number: Int!
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  name: String!
  email: String!
  dialogs: [Dialog!]!
}
